{
  "name": "classwaves-backend",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "dev": "./scripts/dev-startup.sh",
    "dev:server-only": "nodemon --exec ts-node src/server.ts",
    "dev:redis": "./scripts/apply-redis-config.sh",
    "email:test-group-leader": "ts-node src/scripts/send-test-group-leader-email.ts",
    "build": "tsc -p tsconfig.prod.json",
    "start": "node dist/server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "ENABLE_NETWORK_TESTS=1 jest --testPathPattern=src/__tests__/integration --testPathIgnorePatterns=\"\"",
    "test:integration:all": "ENABLE_NETWORK_TESTS=1 jest --testPathPattern=src/__tests__/integration --runInBand --testPathIgnorePatterns=\"\"",
    "test:integration:ws:rest-first": "ENABLE_NETWORK_TESTS=1 jest src/__tests__/integration/ws-rest-first-control.integration.test.ts --runInBand --testPathIgnorePatterns=\"\"",
    "test:integration:cache": "jest --testPathPattern=src/__tests__/integration/cache/cache.middleware.test.ts --testPathIgnorePatterns=\"\"",
    "test:integration:cache:new": "CW_CACHE_PREFIX_ENABLED=1 CW_CACHE_EPOCHS_ENABLED=1 jest --testPathPattern=src/__tests__/integration/cache/cache.middleware.test.ts --testPathIgnorePatterns=\"\"",
    "test:integration:cache:ws": "jest --testPathPattern=src/__tests__/integration/cache/cache.ws-updates.test.ts --testPathIgnorePatterns=\"\"",
    "test:integration:cache:access-codes": "jest --testPathPattern=src/__tests__/integration/cache/access-code.dualread.test.ts --testPathIgnorePatterns=\"\"",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "type-check": "tsc --noEmit",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "cache:policy:print": "ts-node scripts/generate-cache-policy.ts",
    "cache:policy:save": "OUT_FILE=docs/cache-policy.sot.json ts-node scripts/generate-cache-policy.ts",
    "db:create-catalog": "ts-node src/scripts/create-unity-catalog-clean.ts",
    "db:verify": "ts-node src/scripts/verify-catalog.ts",
    "db:audit": "ts-node src/scripts/audit-catalog-structure.ts",
    "db:show": "ts-node src/scripts/show-catalog-structure.ts",
    "db:check": "ts-node src/scripts/check-databricks-state.ts",
    "db:integrity-audit": "ts-node src/scripts/data-integrity-audit.ts",
    "db:performance-baseline": "ts-node src/scripts/performance-baseline.ts",
    "db:schema-sot": "npx ts-node scripts/comprehensive-schema-audit.ts",
    "validate-test-schema": "ts-node src/scripts/database-schema-validator.ts",
    "validate-integration-infrastructure": "ts-node src/scripts/validate-integration-infrastructure.ts",
    "validate-env-parity": "ts-node src/scripts/environment-parity-validator.ts",
    "architecture-scan": "node scripts/architecture-scan.js",
    "feature-scan": "node ../scripts/feature-scan.js",
    "redis:monitor": "./scripts/redis-monitor.sh",
    "redis:backup": "./scripts/redis-backup.sh",
    "redis:config": "./scripts/apply-redis-config.sh",
    "feature-status": "node ../scripts/feature-scan.js status",
    "feature-files": "node ../scripts/feature-scan.js files",
    "audit": "node dist/workers/audit-log.worker.js",
    "dev:audit": "ts-node src/workers/audit-log.worker.ts",
    "audit:dlq:replay": "ts-node src/scripts/audit-dlq-replay.ts",
    "ci:check-sql-stars": "rg -nUP \"SELECT[\\s\\S]{0,400}[A-Za-z_]\\.\\*\" src && echo 'ERROR: alias-star selects found' && exit 1 || echo 'OK: no alias-star selects'",
    "ci:check-raw-stars": "rg -n \"SELECT \\*\" src && echo 'ERROR: raw star selects found' && exit 1 || echo 'OK: no raw star selects'",
    "ci:guard-sql": "npm run ci:check-sql-stars && npm run ci:check-raw-stars"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "engines": {
    "node": ">=18 <21"
  },
  "dependencies": {
    "@classwaves/shared": "file:../classwaves-shared",
    "@databricks/sql": "^1.11.0",
    "@socket.io/redis-adapter": "^8.3.0",
    "@types/cookie-parser": "^1.4.9",
    "@types/ioredis": "^4.28.10",
    "@types/lru-cache": "^7.10.9",
    "@types/multer": "^2.0.0",
    "@types/nodemailer": "^6.4.17",
    "@types/opossum": "^8.1.9",
    "@types/socket.io": "^3.0.1",
    "axios": "^1.11.0",
    "bottleneck": "^2.19.5",
    "bullmq": "^5.56.9",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "form-data": "^4.0.4",
    "glob": "^11.0.3",
    "google-auth-library": "^10.2.0",
    "handlebars": "^4.7.8",
    "helmet": "^8.1.0",
    "html-to-text": "^9.0.5",
    "ioredis": "^5.7.0",
    "jsonwebtoken": "^9.0.2",
    "juice": "^11.0.1",
    "lru-cache": "^11.1.0",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.5",
    "opossum": "^9.0.0",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "rate-limiter-flexible": "^7.2.0",
    "socket.io": "^4.8.1",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "zod": "^4.0.14"
  },
  "devDependencies": {
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/html-to-text": "^9.0.4",
    "@types/jest": "^29.5.12",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^24.1.0",
    "@types/passport": "^1.0.17",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "eslint": "^9.32.0",
    "jest": "^29.7.0",
    "jest-mock-extended": "^3.0.5",
    "nodemon": "^3.1.10",
    "prettier": "^3.6.2",
    "prom-client": "^15.1.3",
    "socket.io-client": "^4.8.1",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "typescript": "5.8.3"
  }
}
