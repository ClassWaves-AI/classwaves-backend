-- Auto-generated by scripts/dbx-manifest/generate.ts
-- Do not edit manually.
SET client_min_messages TO WARNING;

CREATE SCHEMA IF NOT EXISTS admin;
CREATE SCHEMA IF NOT EXISTS ai_insights;
CREATE SCHEMA IF NOT EXISTS analytics;
CREATE SCHEMA IF NOT EXISTS audio;
CREATE SCHEMA IF NOT EXISTS communication;
CREATE SCHEMA IF NOT EXISTS compliance;
CREATE SCHEMA IF NOT EXISTS notifications;
CREATE SCHEMA IF NOT EXISTS operational;
CREATE SCHEMA IF NOT EXISTS sessions;
CREATE SCHEMA IF NOT EXISTS users;

-- Schema: admin
-- Table: admin.districts (source: classwaves.admin.districts)
CREATE TABLE IF NOT EXISTS admin.districts (
  id uuid NOT NULL,
  created_at timestamptz,
  updated_at timestamptz,
  contact_email text,
  contact_phone text,
  contract_details jsonb,
  is_active boolean,
  name text,
  region text,
  school_count integer,
  state text,
  student_count integer,
  subscription_tier text,
  superintendent_name text,
  teacher_count integer,
  website text,
  PRIMARY KEY (id)
);

-- Table: admin.schema_migrations (source: classwaves.admin.schema_migrations)
CREATE TABLE IF NOT EXISTS admin.schema_migrations (
  id uuid NOT NULL,
  error_message text,
  executed_at timestamptz,
  execution_time_ms bigint,
  migration_file text,
  migration_name text,
  sql_hash text,
  status text,
  PRIMARY KEY (id)
);

-- Table: admin.school_settings (source: classwaves.admin.school_settings)
CREATE TABLE IF NOT EXISTS admin.school_settings (
  id uuid NOT NULL,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  description text,
  is_editable boolean,
  setting_key text,
  setting_type text,
  setting_value text,
  PRIMARY KEY (id)
);


-- Schema: ai_insights
-- Table: ai_insights.analysis_results (source: classwaves.ai_insights.analysis_results)
CREATE TABLE IF NOT EXISTS ai_insights.analysis_results (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  analysis_timestamp timestamptz,
  analysis_type text,
  confidence_score numeric(5,4),
  group_id uuid /* Per-group Tier2 scope */,
  model_version text,
  processing_time_ms integer,
  result_data jsonb,
  PRIMARY KEY (id)
);

-- Table: ai_insights.educational_insights (source: classwaves.ai_insights.educational_insights)
CREATE TABLE IF NOT EXISTS ai_insights.educational_insights (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  applies_to_id uuid,
  applies_to_type text,
  confidence_level numeric(5,2),
  description text,
  impact_score numeric(5,2),
  insight_type text,
  recommendations text,
  title text,
  PRIMARY KEY (id)
);

-- Table: ai_insights.group_summaries (source: classwaves.ai_insights.group_summaries)
CREATE TABLE IF NOT EXISTS ai_insights.group_summaries (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  analysis_timestamp timestamptz,
  group_id uuid,
  summary_json text,
  PRIMARY KEY (id)
);

-- Table: ai_insights.guidance_events (source: classwaves.ai_insights.guidance_events)
CREATE TABLE IF NOT EXISTS ai_insights.guidance_events (
  id uuid NOT NULL,
  session_id uuid,
  teacher_id uuid,
  created_at timestamptz,
  event_timestamp timestamptz,
  event_type text,
  group_id uuid,
  payload jsonb,
  PRIMARY KEY (id)
);

-- Table: ai_insights.intervention_suggestions (source: classwaves.ai_insights.intervention_suggestions)
CREATE TABLE IF NOT EXISTS ai_insights.intervention_suggestions (
  id uuid NOT NULL,
  session_id uuid,
  teacher_id uuid,
  created_at timestamptz,
  acted_at timestamptz,
  acted_upon boolean,
  group_id uuid,
  intervention_type text,
  reason text,
  status text,
  suggested_action text,
  target_student_id uuid,
  target_type text,
  urgency text,
  was_effective boolean,
  PRIMARY KEY (id)
);

-- Table: ai_insights.schema_migrations (source: classwaves.ai_insights.schema_migrations)
CREATE TABLE IF NOT EXISTS ai_insights.schema_migrations (
  id uuid NOT NULL,
  error_message text,
  executed_at timestamptz,
  execution_time_ms bigint,
  migration_file text,
  migration_name text,
  sql_hash text,
  status text,
  PRIMARY KEY (id)
);

-- Table: ai_insights.session_guidance_analytics (source: classwaves.ai_insights.session_guidance_analytics)
CREATE TABLE IF NOT EXISTS ai_insights.session_guidance_analytics (
  id uuid NOT NULL,
  session_id uuid,
  teacher_id uuid,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  acknowledgment_rate double precision,
  ai_analysis_latency_ms double precision,
  avg_effectiveness_score double precision,
  avg_feedback_rating double precision,
  avg_response_time_seconds double precision,
  category_breakdown jsonb,
  compliance_violations integer,
  data_retention_compliance boolean,
  discussion_quality_improvement double precision,
  effectiveness_rate double precision,
  error_count integer,
  learning_objective_completion_rate double precision,
  phase_breakdown jsonb,
  priority_breakdown jsonb,
  privacy_safeguards_applied boolean,
  prompt_generation_latency_ms double precision,
  session_date date,
  session_duration_minutes integer,
  session_improvement_score double precision,
  student_engagement_improvement double precision,
  subject_area text,
  system_uptime_percentage double precision,
  teacher_feedback_text text,
  teacher_satisfaction_rating integer,
  total_groups integer,
  total_prompts_acknowledged integer,
  total_prompts_dismissed integer,
  total_prompts_expired integer,
  total_prompts_generated integer,
  total_prompts_used integer,
  total_students integer,
  usage_rate double precision,
  would_recommend_system boolean,
  PRIMARY KEY (id)
);

-- Table: ai_insights.session_summaries (source: classwaves.ai_insights.session_summaries)
CREATE TABLE IF NOT EXISTS ai_insights.session_summaries (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  analysis_timestamp timestamptz,
  summary_json text,
  PRIMARY KEY (id)
);

-- Table: ai_insights.teacher_guidance_metrics (source: classwaves.ai_insights.teacher_guidance_metrics)
CREATE TABLE IF NOT EXISTS ai_insights.teacher_guidance_metrics (
  id uuid NOT NULL /* Unique identifier for the guidance metric record */,
  session_id uuid /* Reference to the classroom session */,
  teacher_id uuid /* Reference to the teacher user */,
  prompt_category text /* facilitation, deepening, redirection, collaboration, */,
  prompt_id uuid /* Unique identifier for the specific prompt */,
  PRIMARY KEY (id)
);

-- Table: ai_insights.teacher_prompt_effectiveness (source: classwaves.ai_insights.teacher_prompt_effectiveness)
CREATE TABLE IF NOT EXISTS ai_insights.teacher_prompt_effectiveness (
  id uuid NOT NULL,
  created_at timestamptz,
  updated_at timestamptz,
  acknowledgment_rate double precision,
  avg_effectiveness_score double precision,
  avg_feedback_rating double precision,
  avg_learning_impact double precision,
  avg_response_time_seconds double precision,
  calculation_period_end timestamptz,
  calculation_period_start timestamptz,
  confidence_interval_lower double precision,
  confidence_interval_upper double precision,
  data_points integer,
  dismissal_rate double precision,
  last_calculated timestamptz,
  priority_level text,
  prompt_category text,
  session_phase text,
  std_dev_effectiveness double precision,
  subject_area text,
  total_acknowledged integer,
  total_dismissed integer,
  total_generated integer,
  total_used integer,
  usage_rate double precision,
  PRIMARY KEY (id)
);

-- Table: ai_insights.tier1_analysis (source: classwaves.ai_insights.tier1_analysis)
CREATE TABLE IF NOT EXISTS ai_insights.tier1_analysis (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  analysis_timestamp timestamptz,
  group_id uuid,
  insights text,
  PRIMARY KEY (id)
);

-- Table: ai_insights.tier2_analysis (source: classwaves.ai_insights.tier2_analysis)
CREATE TABLE IF NOT EXISTS ai_insights.tier2_analysis (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  analysis_timestamp timestamptz,
  insights text,
  PRIMARY KEY (id)
);


-- Schema: analytics
-- Table: analytics.dashboard_metrics_hourly (source: classwaves.analytics.dashboard_metrics_hourly)
CREATE TABLE IF NOT EXISTS analytics.dashboard_metrics_hourly (
  id uuid NOT NULL /* Unique identifier for hourly metric record */,
  school_id uuid /* School identifier for data isolation */,
  created_at timestamptz /* Record creation timestamp */,
  ai_analyses_completed integer /* Number of AI analyses completed during this hour */,
  ai_analysis_success_rate double precision /* AI analysis success rate as percentage */,
  avg_ai_processing_time double precision /* Average AI processing time in milliseconds */,
  avg_audio_quality double precision /* Average audio quality score for the hour */,
  avg_collaboration_score double precision /* Average collaboration effectiveness for the hour */,
  avg_connection_stability double precision /* Average connection stability for the hour */,
  avg_engagement_score double precision /* Average student engagement score for the hour */,
  avg_latency_ms double precision /* Average network latency in milliseconds */,
  avg_participation_rate double precision /* Average student participation rate for the hour */,
  avg_response_time double precision /* Average system response time in milliseconds */,
  avg_session_quality double precision /* Average session quality score for the hour */,
  calculated_at timestamptz /* When this aggregation was calculated */,
  calculation_method text /* Method used for aggregation (hourly_rollup) */,
  data_sources_count integer /* Number of source records aggregated */,
  error_rate double precision /* Error rate as percentage (0.0-100.0) */,
  estimated_compute_cost double precision /* Estimated compute cost for this hour */,
  metric_hour timestamptz /* Hour of aggregated metrics (e.g., 2024-01-15 14:00:00) */,
  ready_groups integer /* Number of groups that were ready during this hour */,
  sessions_active integer /* Number of active sessions during this hour */,
  sessions_completed integer /* Number of sessions completed during this hour */,
  students_active integer /* Number of unique students active during this hour */,
  teachers_active integer /* Number of unique teachers active during this hour */,
  total_alerts integer /* Total system alerts generated during this hour */,
  total_errors integer /* Total system errors during this hour */,
  total_groups integer /* Total number of groups active during this hour */,
  total_interventions integer /* Total teacher interventions during this hour */,
  total_prompts_generated integer /* Total AI prompts generated during this hour */,
  total_prompts_used integer /* Total prompts acted upon by teachers */,
  total_storage_gb double precision /* Total storage used in gigabytes */,
  total_transcription_minutes double precision /* Total minutes of transcription processed */,
  websocket_connections integer /* Peak concurrent websocket connections */,
  PRIMARY KEY (id)
);

-- Table: analytics.educational_metrics (source: classwaves.analytics.educational_metrics)
CREATE TABLE IF NOT EXISTS analytics.educational_metrics (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  aggregation_level text,
  calculation_timestamp timestamptz,
  metric_metadata jsonb,
  metric_name text,
  metric_type text,
  metric_value numeric(10,4),
  PRIMARY KEY (id)
);

-- Table: analytics.group_analytics (source: classwaves.analytics.group_analytics)
CREATE TABLE IF NOT EXISTS analytics.group_analytics (
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  analysis_type text,
  avg_collaboration_time numeric(10,2),
  avg_message_length numeric(8,2),
  completion_rate numeric(5,2),
  computed_at timestamptz,
  engagement_score numeric(5,2),
  group_id uuid,
  leader_engagement_score numeric(5,2),
  member_count integer,
  participation_rate numeric(5,2),
  total_messages integer
);

-- Table: analytics.group_metrics (source: classwaves.analytics.group_metrics)
CREATE TABLE IF NOT EXISTS analytics.group_metrics (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  academic_discourse_score numeric(5,2),
  average_sentiment_score numeric(5,2),
  calculation_timestamp timestamptz,
  configured_name text /* Teacher-assigned group name */,
  configured_size integer /* Number of members assigned to group */,
  conflict_instances integer,
  dominant_speaker_percentage numeric(5,2),
  emotional_support_instances integer,
  group_id uuid,
  interruption_rate numeric(5,2),
  leader_assigned boolean /* Whether a leader was assigned to this group */,
  leader_ready_at timestamptz /* When group leader marked ready */,
  members_configured integer /* Number of members configured for group */,
  members_present integer /* Number of configured members actually present */,
  participation_equality_index numeric(5,4),
  silent_members_count integer,
  supportive_interactions_count integer,
  topic_coherence_score numeric(5,2),
  turn_taking_score numeric(5,2),
  vocabulary_diversity_score numeric(5,2),
  PRIMARY KEY (id)
);

-- Table: analytics.session_analytics (source: classwaves.analytics.session_analytics)
CREATE TABLE IF NOT EXISTS analytics.session_analytics (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  analysis_type text,
  analytics_data text,
  computation_id uuid,
  computation_metadata jsonb,
  computed_at timestamptz,
  error_message text,
  failed_at timestamptz,
  processing_time_ms bigint,
  started_at timestamptz,
  status text,
  version text,
  PRIMARY KEY (id)
);

-- Table: analytics.session_analytics_cache (source: classwaves.analytics.session_analytics_cache)
CREATE TABLE IF NOT EXISTS analytics.session_analytics_cache (
  id uuid NOT NULL,
  session_id uuid,
  teacher_id uuid,
  school_id uuid,
  created_at timestamptz,
  active_students integer,
  actual_duration_minutes integer,
  actual_groups integer,
  avg_collaboration_score double precision,
  avg_engagement_score double precision,
  avg_group_readiness_time double precision,
  avg_participation_rate double precision,
  cache_key text,
  expires_at timestamptz,
  last_updated timestamptz,
  planned_duration_minutes integer,
  planned_groups integer,
  ready_groups_at_10m integer,
  ready_groups_at_5m integer,
  ready_groups_at_start integer,
  session_date date,
  session_status text,
  total_students integer,
  total_transcriptions integer,
  PRIMARY KEY (id)
);

-- Table: analytics.session_events (source: classwaves.analytics.session_events)
CREATE TABLE IF NOT EXISTS analytics.session_events (
  id uuid NOT NULL /* Unique event identifier */,
  session_id uuid /* Session this event belongs to (FK to classroom_sessions) */,
  teacher_id uuid /* Teacher who owns the session (FK to teachers) */,
  created_at timestamptz /* Record creation timestamp */,
  updated_at timestamptz,
  event_time timestamptz /* When the event occurred (UTC timestamp) */,
  event_type text /* Event type: configured */,
  payload jsonb /* JSON string with event-specific data (groupId, counts, member info, etc.) */,
  PRIMARY KEY (id)
);

-- Table: analytics.session_metrics (source: classwaves.analytics.session_metrics)
CREATE TABLE IF NOT EXISTS analytics.session_metrics (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  academic_vocabulary_usage numeric(5,2),
  active_students integer,
  adherence_members_ratio double precision /* Ratio of actual to planned member participation */,
  attention_score numeric(5,2),
  average_connection_quality numeric(5,2),
  average_group_size numeric(5,2),
  average_speaking_time_seconds numeric(10,2),
  calculation_timestamp timestamptz,
  collaboration_score numeric(5,2),
  configured_at timestamptz /* When session was fully configured */,
  group_formation_time_seconds integer,
  group_stability_score numeric(5,2),
  interaction_score numeric(5,2),
  on_topic_percentage numeric(5,2),
  overall_engagement_score numeric(5,2),
  participation_rate numeric(5,2),
  planned_duration_minutes integer /* Planned session duration in minutes */,
  planned_group_size integer /* Target group size configured by teacher */,
  planned_groups integer /* Number of groups configured by teacher */,
  planned_leaders integer /* Number of group leaders assigned */,
  planned_members integer /* Total members planned across all groups */,
  planned_scheduled_start timestamptz /* Teacher-scheduled start time */,
  question_asking_rate numeric(5,2),
  ready_groups_at_10m integer /* Number of groups ready at 10 minutes */,
  ready_groups_at_5m integer /* Number of groups ready at 5 minutes */,
  ready_groups_at_start integer /* Number of groups marked ready when session started */,
  speaking_time_std_dev numeric(10,2),
  started_at timestamptz /* When session was actually started */,
  started_without_ready_groups boolean /* Whether session started before all groups were ready */,
  technical_issues_count integer,
  total_students integer,
  PRIMARY KEY (id)
);

-- Table: analytics.student_metrics (source: classwaves.analytics.student_metrics)
CREATE TABLE IF NOT EXISTS analytics.student_metrics (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  average_sentiment numeric(5,2),
  average_turn_duration_seconds numeric(10,2),
  calculation_timestamp timestamptz,
  confidence_level numeric(5,2),
  fluency_score numeric(5,2),
  grammar_accuracy_score numeric(5,2),
  initiative_score numeric(5,2),
  participant_id uuid,
  participation_score numeric(5,2),
  peer_interaction_count integer,
  questions_asked_count integer,
  responsiveness_score numeric(5,2),
  speaking_turns_count integer,
  stress_indicators_count integer,
  supportive_comments_count integer,
  total_speaking_time_seconds integer,
  vocabulary_complexity_score numeric(5,2),
  PRIMARY KEY (id)
);

-- Table: analytics.teacher_analytics_summary (source: classwaves.analytics.teacher_analytics_summary)
CREATE TABLE IF NOT EXISTS analytics.teacher_analytics_summary (
  id uuid NOT NULL,
  teacher_id uuid,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  avg_collaboration_score double precision,
  avg_critical_thinking_score double precision,
  avg_discussion_quality_score double precision,
  avg_effectiveness_score double precision,
  avg_engagement_score double precision,
  avg_participation_rate double precision,
  avg_prompt_response_time double precision,
  avg_session_score double precision,
  calculated_at timestamptz,
  calculation_method text,
  confidence_score double precision,
  data_quality_score double precision,
  prompt_usage_rate double precision,
  source_tables text,
  summary_date date,
  total_prompts_dismissed integer,
  total_prompts_shown integer,
  total_prompts_used integer,
  total_session_duration_minutes integer,
  total_sessions integer,
  PRIMARY KEY (id)
);


-- Schema: audio
-- Table: audio.recordings (source: classwaves.audio.recordings)
CREATE TABLE IF NOT EXISTS audio.recordings (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  channels integer,
  codec text,
  duration_seconds integer,
  file_path text,
  file_size_bytes bigint,
  format text,
  group_id uuid,
  is_processed boolean,
  last_error text,
  participant_id uuid,
  processed_at timestamptz,
  processing_attempts integer,
  sample_rate integer,
  transcription_status text,
  PRIMARY KEY (id)
);


-- Schema: communication
-- Table: communication.messages (source: classwaves.communication.messages)
CREATE TABLE IF NOT EXISTS communication.messages (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  content text,
  deleted_at timestamptz,
  is_archived boolean,
  is_deleted boolean,
  is_read boolean,
  message_type text,
  metadata jsonb,
  read_at timestamptz,
  recipient_id uuid,
  recipient_type text,
  sender_id uuid,
  sender_type text,
  subject text,
  PRIMARY KEY (id)
);


-- Schema: compliance
-- Table: compliance.audit_log (source: classwaves.compliance.audit_log)
CREATE TABLE IF NOT EXISTS compliance.audit_log (
  id uuid NOT NULL,
  session_id uuid,
  school_id uuid,
  created_at timestamptz,
  actor_id uuid,
  actor_type text,
  affected_student_ids uuid,
  compliance_basis text,
  data_accessed text,
  description text,
  event_category text,
  event_timestamp timestamptz,
  event_type text,
  ip_address text,
  resource_id uuid,
  resource_type text,
  user_agent text,
  PRIMARY KEY (id)
);

-- Table: compliance.coppa_compliance (source: classwaves.compliance.coppa_compliance)
CREATE TABLE IF NOT EXISTS compliance.coppa_compliance (
  id uuid NOT NULL,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  age_verification_method text,
  age_verified_at timestamptz,
  auto_delete_enabled boolean,
  birth_year integer,
  data_collection_limited boolean,
  delete_after_days integer,
  deletion_completed_at timestamptz,
  deletion_requested_at timestamptz,
  is_under_13 boolean,
  no_behavioral_targeting boolean,
  no_third_party_sharing boolean,
  parent_access_enabled boolean,
  parent_last_reviewed timestamptz,
  student_id uuid,
  PRIMARY KEY (id)
);

-- Table: compliance.parental_consents (source: classwaves.compliance.parental_consents)
CREATE TABLE IF NOT EXISTS compliance.parental_consents (
  id uuid NOT NULL,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  consent_date timestamptz,
  consent_given boolean,
  consent_text_version text,
  consent_type text,
  expires_at timestamptz,
  ip_address text,
  parent_email text,
  parent_name text,
  relationship text,
  revoked_at timestamptz,
  student_id uuid,
  user_agent text,
  verification_method text,
  verification_token text,
  verified_at timestamptz,
  PRIMARY KEY (id)
);

-- Table: compliance.retention_policies (source: classwaves.compliance.retention_policies)
CREATE TABLE IF NOT EXISTS compliance.retention_policies (
  id uuid NOT NULL,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  archive_after_days integer,
  auto_delete_enabled boolean,
  delete_after_days integer,
  legal_basis text,
  policy_type text,
  retention_days integer,
  PRIMARY KEY (id)
);


-- Schema: notifications
-- Table: notifications.notification_queue (source: classwaves.notifications.notification_queue)
CREATE TABLE IF NOT EXISTS notifications.notification_queue (
  id uuid NOT NULL,
  created_at timestamptz,
  channel text,
  content text,
  expires_at timestamptz,
  failed_at timestamptz,
  failure_reason text,
  max_retries integer,
  notification_type text,
  priority text,
  recipient_address text,
  retry_count integer,
  scheduled_for timestamptz,
  sent_at timestamptz,
  status text,
  subject text,
  template_data jsonb,
  template_id uuid,
  user_id uuid,
  PRIMARY KEY (id)
);

-- Table: notifications.templates (source: classwaves.notifications.templates)
CREATE TABLE IF NOT EXISTS notifications.templates (
  id uuid NOT NULL,
  created_at timestamptz,
  updated_at timestamptz,
  body_template text,
  category text,
  channel text,
  created_by text,
  description text,
  is_active boolean,
  name text,
  subject_template text,
  variables jsonb,
  version integer,
  PRIMARY KEY (id)
);


-- Schema: operational
-- Table: operational.api_metrics (source: classwaves.operational.api_metrics)
CREATE TABLE IF NOT EXISTS operational.api_metrics (
  id uuid NOT NULL,
  school_id uuid,
  endpoint text,
  ip_address text,
  method text,
  response_time_ms integer,
  status_code integer,
  timestamp timestamptz,
  user_agent text,
  user_id uuid,
  PRIMARY KEY (id)
);

-- Table: operational.background_jobs (source: classwaves.operational.background_jobs)
CREATE TABLE IF NOT EXISTS operational.background_jobs (
  id uuid NOT NULL,
  created_at timestamptz,
  updated_at timestamptz,
  completed_at timestamptz,
  error_message text,
  job_type text,
  parameters text,
  result text,
  retry_count integer,
  scheduled_at timestamptz,
  started_at timestamptz,
  status text,
  PRIMARY KEY (id)
);

-- Table: operational.system_events (source: classwaves.operational.system_events)
CREATE TABLE IF NOT EXISTS operational.system_events (
  id uuid NOT NULL,
  session_id uuid,
  school_id uuid,
  created_at timestamptz,
  component text,
  error_details jsonb,
  event_type text,
  message text,
  severity text,
  user_id uuid,
  PRIMARY KEY (id)
);


-- Schema: sessions
-- Table: sessions.classroom_sessions (source: classwaves.sessions.classroom_sessions)
CREATE TABLE IF NOT EXISTS sessions.classroom_sessions (
  id uuid NOT NULL,
  teacher_id uuid,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  access_code text,
  actual_duration_minutes integer,
  actual_end timestamptz,
  actual_start timestamptz,
  ai_analysis_enabled boolean,
  auto_group_enabled boolean,
  coppa_compliant boolean,
  data_retention_date timestamptz,
  description text,
  end_reason text,
  engagement_score numeric(5,2),
  ferpa_compliant boolean,
  goal text /* Learning goal/objectives for the session */,
  max_students integer,
  participation_rate numeric(5,2),
  planned_duration_minutes integer,
  recording_consent_obtained boolean,
  recording_enabled boolean,
  scheduled_start timestamptz,
  status text,
  subject text /* Subject area for the session */,
  target_group_size integer,
  teacher_notes text,
  title text,
  total_groups integer,
  total_students integer,
  transcription_enabled boolean,
  PRIMARY KEY (id)
);

-- Table: sessions.participants (source: classwaves.sessions.participants)
CREATE TABLE IF NOT EXISTS sessions.participants (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  anonymous_id uuid,
  browser_info text,
  can_hear boolean,
  can_speak boolean,
  connection_quality text,
  device_type text,
  display_name text,
  group_id uuid,
  interaction_count integer,
  is_active boolean,
  is_muted boolean,
  join_time timestamptz,
  leave_time timestamptz,
  message_count integer,
  student_id uuid,
  total_speaking_time_seconds integer,
  PRIMARY KEY (id)
);

-- Table: sessions.student_group_members (source: classwaves.sessions.student_group_members)
CREATE TABLE IF NOT EXISTS sessions.student_group_members (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  group_id uuid,
  student_id uuid,
  PRIMARY KEY (id)
);

-- Table: sessions.student_groups (source: classwaves.sessions.student_groups)
CREATE TABLE IF NOT EXISTS sessions.student_groups (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  argumentation_quality numeric(5,2) /* Score representing the quality of arguments, evidence, and reasoning. */,
  auto_managed boolean,
  collaboration_score numeric(5,2),
  conceptual_density numeric(5,2) /* Lexical richness of group discussion. */,
  current_size integer,
  end_time timestamptz,
  group_number integer,
  is_ready boolean,
  leader_id uuid,
  max_size integer,
  name text,
  sentiment_arc text /* JSON string representing the trend of the group sentiment over time. */,
  start_time timestamptz,
  status text,
  topic_focus_score numeric(5,2),
  topical_cohesion numeric(5,2) /* Metric indicating how focused the group discussion is. */,
  total_speaking_time_seconds integer,
  PRIMARY KEY (id)
);

-- Table: sessions.transcriptions (source: classwaves.sessions.transcriptions)
CREATE TABLE IF NOT EXISTS sessions.transcriptions (
  id uuid NOT NULL,
  session_id uuid,
  created_at timestamptz,
  academic_vocabulary_detected boolean,
  confidence_score numeric(5,4),
  content text,
  duration_seconds numeric(10,3),
  end_time timestamptz,
  group_id uuid,
  is_final boolean,
  key_phrases text,
  language_code text,
  sentiment text,
  speaker_id uuid,
  speaker_name text,
  speaker_type text,
  start_time timestamptz,
  PRIMARY KEY (id)
);


-- Schema: users
-- Table: users.analytics_job_metadata (source: classwaves.users.analytics_job_metadata)
CREATE TABLE IF NOT EXISTS users.analytics_job_metadata (
  created_at timestamptz,
  updated_at timestamptz,
  error_message text,
  execution_duration_seconds integer,
  job_name text,
  last_run timestamptz,
  processing_period timestamptz,
  records_processed integer,
  status text
);

-- Table: users.dashboard_metrics_hourly (source: classwaves.users.dashboard_metrics_hourly)
CREATE TABLE IF NOT EXISTS users.dashboard_metrics_hourly (
  id uuid NOT NULL,
  school_id uuid,
  ai_analyses_completed integer,
  ai_analysis_success_rate double precision,
  avg_ai_processing_time double precision,
  avg_audio_quality double precision,
  avg_collaboration_score double precision,
  avg_connection_stability double precision,
  avg_engagement_score double precision,
  avg_participation_rate double precision,
  avg_response_time double precision,
  avg_session_quality double precision,
  calculated_at timestamptz,
  calculation_method text,
  data_sources_count integer,
  estimated_compute_cost double precision,
  metric_hour timestamptz,
  sessions_active integer,
  sessions_completed integer,
  students_active integer,
  teachers_active integer,
  total_alerts integer,
  total_errors integer,
  total_interventions integer,
  total_prompts_generated integer,
  total_prompts_used integer,
  total_storage_gb double precision,
  total_transcription_minutes double precision,
  PRIMARY KEY (id)
);

-- Table: users.schools (source: classwaves.users.schools)
CREATE TABLE IF NOT EXISTS users.schools (
  id uuid NOT NULL,
  created_at timestamptz,
  updated_at timestamptz,
  admin_email text,
  coppa_compliant boolean,
  current_teachers integer,
  data_retention_days integer,
  domain text,
  ferpa_agreement boolean,
  google_workspace_id uuid,
  max_teachers integer,
  name text,
  stripe_customer_id uuid,
  subscription_end_date timestamptz,
  subscription_start_date timestamptz,
  subscription_status text,
  subscription_tier text,
  trial_ends_at timestamptz,
  PRIMARY KEY (id)
);

-- Table: users.session_analytics_cache (source: classwaves.users.session_analytics_cache)
CREATE TABLE IF NOT EXISTS users.session_analytics_cache (
  id uuid NOT NULL,
  session_id uuid,
  teacher_id uuid,
  school_id uuid,
  actual_groups integer,
  avg_ai_confidence double precision,
  avg_audio_quality double precision,
  avg_connection_stability double precision,
  avg_critical_thinking_score double precision,
  avg_engagement_score double precision,
  avg_group_score double precision,
  avg_participation_balance double precision,
  avg_readiness_time_minutes double precision,
  cache_freshness text,
  cache_hit_count integer,
  cached_at timestamptz,
  error_count integer,
  fallback_count integer,
  group_completion_rate double precision,
  groups_ready_at_10min integer,
  groups_ready_at_5min integer,
  groups_ready_at_start integer,
  intervention_events text,
  intervention_recommendations text,
  key_insights text,
  last_full_calculation timestamptz,
  last_real_time_update timestamptz,
  leader_readiness_rate double precision,
  leader_ready_events text,
  participation_rate double precision,
  planned_groups integer,
  session_date date,
  session_duration_minutes integer,
  session_effectiveness_score double precision,
  session_overall_score double precision,
  session_status text,
  total_ai_analyses integer,
  total_participants integer,
  total_transcription_time double precision,
  PRIMARY KEY (id)
);

-- Table: users.students (source: classwaves.users.students)
CREATE TABLE IF NOT EXISTS users.students (
  id uuid NOT NULL,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  audio_recording_consent boolean,
  consent_date timestamptz,
  coppa_compliant boolean,
  data_sharing_consent boolean,
  display_name text,
  email text,
  email_consent boolean,
  family_name text /* Student family/last name */,
  given_name text /* Student given/first name */,
  google_id uuid,
  grade_level text,
  has_parental_consent boolean,
  parent_email text,
  preferred_name text /* Student preferred name */,
  status text,
  teacher_verified_age boolean,
  PRIMARY KEY (id)
);

-- Table: users.teacher_analytics_summary (source: classwaves.users.teacher_analytics_summary)
CREATE TABLE IF NOT EXISTS users.teacher_analytics_summary (
  id uuid NOT NULL,
  teacher_id uuid,
  school_id uuid,
  avg_alert_response_time double precision,
  avg_collaboration_score double precision,
  avg_critical_thinking_score double precision,
  avg_discussion_quality_score double precision,
  avg_effectiveness_score double precision,
  avg_engagement_score double precision,
  avg_group_completion_rate double precision,
  avg_group_readiness_time double precision,
  avg_intervention_rate double precision,
  avg_participation_rate double precision,
  avg_prompt_response_time double precision,
  avg_session_score double precision,
  calculated_at timestamptz,
  confidence_score double precision,
  data_points_included integer,
  improvement_trend text,
  last_updated timestamptz,
  prompt_usage_rate double precision,
  summary_date date,
  total_alerts_generated integer,
  total_interventions integer,
  total_leader_ready_events integer,
  total_prompts_dismissed integer,
  total_prompts_shown integer,
  total_prompts_used integer,
  total_session_duration_minutes integer,
  total_sessions integer,
  vs_peer_average double precision,
  vs_school_average double precision,
  PRIMARY KEY (id)
);

-- Table: users.teachers (source: classwaves.users.teachers)
CREATE TABLE IF NOT EXISTS users.teachers (
  id uuid NOT NULL,
  school_id uuid,
  created_at timestamptz,
  updated_at timestamptz,
  access_level text,
  current_sessions integer,
  email text,
  features_enabled jsonb,
  google_id uuid,
  grade text,
  last_login timestamptz,
  login_count integer,
  max_concurrent_sessions integer,
  name text,
  picture text,
  role text,
  status text,
  subject text,
  timezone text,
  total_sessions_created integer,
  PRIMARY KEY (id)
);

